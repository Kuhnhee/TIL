{"version":3,"file":"free-style.spec.js","sourceRoot":"","sources":["../src/free-style.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import test = require('blue-tape')\nimport crypto = require('crypto')\nimport { create, IS_UNIQUE, escape } from './free-style'\n\ntest('free style', (t) => {\n  t.test('output hashed class names', t => {\n    const Style = create()\n    let changeId = Style.changeId\n\n    const className = Style.registerStyle({\n      color: 'red'\n    })\n\n    t.equal(Style.getStyles(), `.${className}{color:red}`)\n    t.notEqual(Style.changeId, changeId)\n\n    t.end()\n  })\n\n  t.test('multiple values', t => {\n    const Style = create()\n\n    const className = Style.registerStyle({\n      background: [\n        'red',\n        'linear-gradient(to right, red 0%, green 100%)'\n      ]\n    })\n\n    t.equal(\n      Style.getStyles(),\n      `.${className}{background:red;background:linear-gradient(to right, red 0%, green 100%)}`\n    )\n\n    t.end()\n  })\n\n  t.test('dash-case property names', t => {\n    const Style = create()\n\n    const className = Style.registerStyle({\n      backgroundColor: 'red'\n    })\n\n    t.equal(Style.getStyles(), `.${className}{background-color:red}`)\n\n    t.end()\n  })\n\n  t.test('nest @-rules', t => {\n    const Style = create()\n\n    const className = Style.registerStyle({\n      color: 'red',\n      '@media (min-width: 500px)': {\n        color: 'blue'\n      }\n    })\n\n    t.equal(\n      Style.getStyles(),\n      `.${className}{color:red}@media (min-width: 500px){.${className}{color:blue}}`\n    )\n\n    t.end()\n  })\n\n  t.test('interpolate selectors', t => {\n    const Style = create()\n\n    const className = Style.registerStyle({\n      color: 'red',\n      '& > &': {\n        color: 'blue',\n        '.class-name': {\n          background: 'green'\n        }\n      }\n    })\n\n    t.equal(\n      Style.getStyles(),\n      `.${className}{color:red}.${className} > .${className}{color:blue}` +\n      `.${className} > .${className} .class-name{background:green}`\n    )\n\n    t.end()\n  })\n\n  t.test('do not append \"px\" to whitelist properties', t => {\n    const Style = create()\n\n    const className = Style.registerStyle({\n      flexGrow: 2,\n      WebkitFlexGrow: 2\n    })\n\n    t.equal(Style.getStyles(), `.${className}{-webkit-flex-grow:2;flex-grow:2}`)\n\n    t.end()\n  })\n\n  t.test('merge exactly duplicate styles', t => {\n    const Style = create()\n    let changeId = Style.changeId\n\n    const className1 = Style.registerStyle({\n      background: 'blue',\n      color: 'red'\n    })\n\n    t.notEqual(Style.changeId, changeId)\n\n    // Checking the duplicate style _does not_ trigger a \"change\".\n    changeId = Style.changeId\n\n    const className2 = Style.registerStyle({\n      color: 'red',\n      background: 'blue'\n    })\n\n    t.equal(Style.changeId, changeId)\n    t.equal(className1, className2)\n    t.equal(Style.getStyles(), `.${className1}{background:blue;color:red}`)\n\n    t.end()\n  })\n\n  t.test('allow debug css prefixes', t => {\n    const Style = create(undefined, true)\n    let changeId = Style.changeId\n\n    const className1 = Style.registerStyle(\n      {\n        color: 'red'\n      },\n      'className1'\n    )\n\n    t.notEqual(Style.changeId, changeId)\n\n    changeId = Style.changeId\n\n    const className2 = Style.registerStyle(\n      {\n        color: 'red'\n      },\n      'className2'\n    )\n\n    t.notEqual(Style.changeId, changeId)\n    t.notEqual(className1, className2)\n    t.equal(Style.getStyles(), `.${className1},.${className2}{color:red}`)\n\n    t.end()\n  })\n\n  t.test('ignore debug prefixes in \"production\"', t => {\n    const Style = create(undefined, false)\n    let changeId = Style.changeId\n\n    const className1 = Style.registerStyle(\n      {\n        color: 'red'\n      },\n      'className1'\n    )\n\n    t.notEqual(Style.changeId, changeId)\n\n    changeId = Style.changeId\n\n    const className2 = Style.registerStyle(\n      {\n        color: 'red'\n      },\n      'className2'\n    )\n\n    t.equal(Style.changeId, changeId)\n    t.equal(className1, className2)\n    t.equal(Style.getStyles(), `.${className1}{color:red}`)\n\n    t.end()\n  })\n\n  t.test('sort keys by property name', t => {\n    const Style = create()\n\n    const className = Style.registerStyle({\n      border: '5px solid red',\n      borderWidth: 10,\n      borderColor: 'blue'\n    })\n\n    t.equal(Style.getStyles(), `.${className}{border:5px solid red;border-color:blue;border-width:10px}`)\n\n    t.end()\n  })\n\n  t.test('sort keys alphabetically after hyphenating', t => {\n    const Style = create()\n\n    const className = Style.registerStyle({\n      borderRadius: 5,\n      msBorderRadius: 5\n    })\n\n    t.equal(Style.getStyles(), `.${className}{-ms-border-radius:5px;border-radius:5px}`)\n\n    t.end()\n  })\n\n  t.test('overloaded keys should stay sorted in insertion order', t => {\n    const Style = create()\n\n    const className = Style.registerStyle({\n      foo: [15, 13, 11, 9, 7, 5, 3, 1, 14, 12, 10, 8, 6, 4, 2]\n    })\n\n    t.equal(Style.getStyles(), `.${className}{foo:15px;foo:13px;foo:11px;foo:9px;foo:7px;foo:5px;foo:3px;foo:1px;foo:14px;foo:12px;foo:10px;foo:8px;foo:6px;foo:4px;foo:2px}`)\n\n    t.end()\n  })\n\n  t.test('merge duplicate nested style', t => {\n    const Style = create()\n\n    const className = Style.registerStyle({\n      color: 'red',\n      '.foo': {\n        color: 'red'\n      }\n    })\n\n    t.equal(\n      Style.getStyles(),\n      `.${className},.${className} .foo{color:red}`\n    )\n\n    t.end()\n  })\n\n  t.test('@-rules across multiple styles produce multiple rules', t => {\n    const Style = create()\n    const mediaQuery = '@media (min-width: 600px)'\n    let changeId = Style.changeId\n\n    const className1 = Style.registerStyle({\n      [mediaQuery]: {\n        color: 'red'\n      }\n    })\n\n    t.notEqual(Style.changeId, changeId)\n\n    // Checking the next register _does_ trigger a change.\n    changeId = Style.changeId\n\n    const className2 = Style.registerStyle({\n      [mediaQuery]: {\n        color: 'blue'\n      }\n    })\n\n    t.notEqual(Style.changeId, changeId)\n\n    t.equal(\n      Style.getStyles(),\n      `@media (min-width: 600px){.${className1}{color:red}}@media (min-width: 600px){.${className2}{color:blue}}`\n    )\n\n    t.end()\n  })\n\n  t.test('do not output empty styles', t => {\n    const Style = create()\n\n    Style.registerStyle({\n      color: null\n    })\n\n    t.equal(Style.getStyles(), '')\n\n    t.end()\n  })\n\n  t.test('support @-rules within @-rules', t => {\n    const Style = create()\n\n    const className = Style.registerStyle({\n      '@media (min-width: 100em)': {\n        '@supports (display: flexbox)': {\n          maxWidth: 100\n        }\n      }\n    })\n\n    t.equal(\n      Style.getStyles(),\n      `@media (min-width: 100em){@supports (display: flexbox){.${className}{max-width:100px}}}`\n    )\n\n    t.end()\n  })\n\n  t.test('merge styles across instances', t => {\n    const Style1 = create()\n    const Style2 = create()\n    const Style3 = create()\n\n    const className1 = Style1.registerStyle({\n      color: 'red'\n    })\n\n    Style2.registerStyle({ // Should duplicate `className1`.\n      color: 'red'\n    })\n\n    const className3 = Style3.registerStyle({\n      color: 'red',\n      '@media (max-width: 600px)': {\n        color: 'blue'\n      }\n    })\n\n    Style2.merge(Style3)\n    Style1.merge(Style2)\n\n    t.equal(\n      Style1.getStyles(),\n      `.${className1}{color:red}.${className3}{color:red}@media (max-width: 600px){.${className3}{color:blue}}`\n    )\n\n    Style1.unmerge(Style2)\n\n    t.equal(\n      Style1.getStyles(),\n      `.${className1}{color:red}`\n    )\n\n    t.end()\n  })\n\n  t.test('keyframes', t => {\n    const Style = create()\n\n    const keyframes = Style.registerKeyframes({\n      from: { color: 'red' },\n      to: { color: 'blue' }\n    })\n\n    t.equal(Style.getStyles(), `@keyframes ${keyframes}{from{color:red}to{color:blue}}`)\n\n    t.end()\n  })\n\n  t.test('merge duplicate keyframes', t => {\n    const Style = create()\n\n    const keyframes1 = Style.registerKeyframes({\n      from: { color: 'red' },\n      to: { color: 'blue' }\n    })\n\n    const keyframes2 = Style.registerKeyframes({\n      to: { color: 'blue' },\n      from: { color: 'red' }\n    })\n\n    t.equal(keyframes1, keyframes2)\n    t.equal(Style.getStyles(), `@keyframes ${keyframes1}{from{color:red}to{color:blue}}`)\n\n    t.end()\n  })\n\n  t.test('register arbitrary at rule', t => {\n    const Style = create()\n    let changeId = Style.changeId\n\n    Style.registerRule('@font-face', {\n      fontFamily: '\"Bitstream Vera Serif Bold\"',\n      src: 'url(\"https://mdn.mozillademos.org/files/2468/VeraSeBd.ttf\")'\n    })\n\n    t.notEqual(Style.changeId, changeId)\n\n    t.equal(\n      Style.getStyles(),\n      '@font-face{font-family:\"Bitstream Vera Serif Bold\";' +\n      'src:url(\"https://mdn.mozillademos.org/files/2468/VeraSeBd.ttf\")}'\n    )\n\n    t.end()\n  })\n\n  t.test('does not merge arbitrary at rules with different styles', t => {\n    const Style = create()\n\n    Style.registerRule('@font-face', {\n      fontFamily: '\"Bitstream Vera Serif Bold\"',\n      src: 'url(\"https://mdn.mozillademos.org/files/2468/VeraSeBd.ttf\")'\n    })\n\n    Style.registerRule('@font-face', {\n      fontFamily: '\"MyWebFont\"',\n      src: 'url(\"myfont.woff2\")'\n    })\n\n    t.equal(\n      Style.getStyles(),\n      '@font-face{font-family:\"Bitstream Vera Serif Bold\";' +\n      'src:url(\"https://mdn.mozillademos.org/files/2468/VeraSeBd.ttf\")}' +\n      '@font-face{font-family:\"MyWebFont\";src:url(\"myfont.woff2\")}'\n    )\n\n    t.end()\n  })\n\n  t.test('register base rule', t => {\n    const Style = create()\n\n    Style.registerRule('body', {\n      margin: 0,\n      padding: 0\n    })\n\n    t.equal(Style.getStyles(), 'body{margin:0;padding:0}')\n\n    t.end()\n  })\n\n  t.test('register at rule with nesting', t => {\n    const Style = create()\n\n    Style.registerRule('@media print', {\n      body: {\n        color: 'red'\n      }\n    })\n\n    t.equal(Style.getStyles(), '@media print{body{color:red}}')\n\n    t.end()\n  })\n\n  t.test('de-dupe across styles and rules', t => {\n    const Style = create()\n    let changeId = Style.changeId\n\n    const className1 = Style.registerStyle({\n      color: 'red'\n    })\n\n    t.notEqual(Style.changeId, changeId)\n    changeId = Style.changeId\n\n    Style.registerRule('.test', {\n      color: 'red'\n    })\n\n    t.notEqual(Style.changeId, changeId)\n    t.equal(Style.getStyles(), `.${className1},.test{color:red}`)\n\n    t.end()\n  })\n\n  t.test('retain insertion order', t => {\n    const Style = create()\n\n    const x = Style.registerStyle({\n      background: 'red',\n      '@media (min-width: 400px)': {\n        background: 'yellow'\n      }\n    })\n\n    const y = Style.registerStyle({\n      background: 'palegreen',\n      '@media (min-width: 400px)': {\n        background: 'pink'\n      }\n    })\n\n    t.equal(\n      Style.getStyles(),\n      `.${x}{background:red}@media (min-width: 400px){.${x}{background:yellow}}` +\n      `.${y}{background:palegreen}@media (min-width: 400px){.${y}{background:pink}}`\n    )\n\n    t.end()\n  })\n\n  t.test('retain nested param order', t => {\n    const Style = create()\n    let changeId = Style.changeId\n\n    const className = Style.registerStyle({\n      width: '20rem',\n      '@media screen and (min-width: 500px)': {\n        width: 500\n      },\n      '@media screen and (min-width: 1000px)': {\n        width: 1000\n      }\n    })\n\n    t.notEqual(Style.changeId, changeId)\n\n    t.equal(\n      Style.getStyles(),\n      `.${className}{width:20rem}@media screen and (min-width: 500px){.${className}{width:500px}}` +\n        `@media screen and (min-width: 1000px){.${className}{width:1000px}}`\n    )\n\n    t.end()\n  })\n\n  t.test('should work with properties and nested styles in a single rule', t => {\n    const Style = create()\n\n    Style.registerRule('body', {\n      height: '100%',\n      a: {\n        color: 'red'\n      }\n    })\n\n    t.equal(Style.getStyles(), 'body{height:100%}body a{color:red}')\n    t.end()\n  })\n\n  t.test('should interpolate recursively with a rule', t => {\n    const Style = create()\n\n    Style.registerRule('body', {\n      height: '100%',\n      a: {\n        color: 'red'\n      },\n      '@print': {\n        a: {\n          color: 'blue'\n        }\n      }\n    })\n\n    t.equal(Style.getStyles(), 'body{height:100%}body a{color:red}@print{body a{color:blue}}')\n    t.end()\n  })\n\n  t.test('customise hash algorithm', t => {\n    const Style = create((str: string) => {\n      return crypto.createHash('sha256').update(str).digest('hex')\n    })\n\n    const className1 = Style.registerStyle({\n      color: 'red'\n    })\n\n    const className2 = Style.registerStyle({\n      color: 'blue'\n    })\n\n    const keyframes = Style.registerKeyframes({\n      from: {\n        color: 'red'\n      },\n      to: {\n        color: 'blue'\n      }\n    })\n\n    t.equal(className2.length, 65)\n    t.equal(className1.length, 65)\n    t.equal(keyframes.length, 65)\n\n    t.equal(\n      Style.getStyles(),\n      `.${className1}{color:red}.${className2}{color:blue}@keyframes ${keyframes}{from{color:red}to{color:blue}}`\n    )\n\n    t.end()\n  })\n\n  t.test('disable style de-dupe', t => {\n    const Style = create()\n\n    const className = Style.registerStyle({\n      color: 'blue',\n      '&::-webkit-input-placeholder': {\n        color: `rgba(0, 0, 0, 0)`,\n        [IS_UNIQUE]: true\n      },\n      '&::-moz-placeholder': {\n        color: `rgba(0, 0, 0, 0)`,\n        [IS_UNIQUE]: true\n      },\n      '&::-ms-input-placeholder': {\n        color: `rgba(0, 0, 0, 0)`,\n        [IS_UNIQUE]: true\n      }\n    })\n\n    t.equal(\n      Style.getStyles(),\n      `.${className}{color:blue}` +\n      `.${className}::-webkit-input-placeholder{color:rgba(0, 0, 0, 0)}` +\n      `.${className}::-moz-placeholder{color:rgba(0, 0, 0, 0)}` +\n      `.${className}::-ms-input-placeholder{color:rgba(0, 0, 0, 0)}`\n    )\n\n    t.end()\n  })\n\n  t.test('register a css object', t => {\n    const Style = create()\n\n    Style.registerCss({\n      'body': {\n        color: 'red',\n        '@print': {\n          color: 'blue'\n        }\n      },\n      h1: {\n        color: 'red',\n        '@print': {\n          color: '#000',\n          a: {\n            color: 'blue'\n          }\n        }\n      }\n    })\n\n    t.equal(Style.getStyles(), 'body,h1{color:red}@print{body,h1 a{color:blue}h1{color:#000}}')\n\n    t.end()\n  })\n\n  t.test('registering a hashed rule', t => {\n    const Style = create()\n\n    const animation1 = Style.registerHashRule('@keyframes', {\n      from: {\n        color: 'blue'\n      },\n      to: {\n        color: 'red'\n      }\n    })\n\n    const animation2 = Style.registerHashRule('@-webkit-keyframes', {\n      from: {\n        color: 'blue'\n      },\n      to: {\n        color: 'red'\n      }\n    })\n\n    t.equal(animation1, animation2)\n    t.equal(Style.getStyles(), `@keyframes ${animation1}{from{color:blue}to{color:red}}@-webkit-keyframes ${animation2}{from{color:blue}to{color:red}}`)\n\n    t.end()\n  })\n\n  t.test('change events', t => {\n    const styles: string[] = []\n\n    const Style = create(undefined, undefined, {\n      add (style, index) {\n        styles.splice(index, 0, style.getStyles())\n      },\n      change (style, oldIndex, newIndex) {\n        styles.splice(oldIndex, 1)\n        styles.splice(newIndex, 0, style.getStyles())\n      },\n      remove (_, index) {\n        styles.splice(index, 1)\n      }\n    })\n\n    Style.registerStyle({\n      background: 'red',\n      '@media (min-width: 400px)': {\n        background: 'yellow'\n      }\n    })\n\n    Style.registerStyle({\n      background: 'palegreen',\n      '@media (min-width: 400px)': {\n        background: 'pink'\n      }\n    })\n\n    t.equal(styles.join(''), Style.getStyles())\n    t.end()\n  })\n\n  t.test('escape css selectors', t => {\n    const Style = create()\n    const displayName = 'Connect(App)'\n\n    const animationName = Style.registerKeyframes(\n      { from: { color: 'red' } },\n      displayName\n    )\n\n    const className = Style.registerStyle(\n      { animation: animationName, '.t': { color: 'red' } },\n      displayName\n    )\n\n    t.ok(animationName.startsWith(displayName))\n    t.ok(className.startsWith(displayName))\n\n    t.equal(\n      Style.getStyles(),\n      `@keyframes ${escape(animationName)}{from{color:red}}` +\n      `.${escape(className)}{animation:Connect(App)_ftl4afb}` +\n      `.${escape(className)} .t{color:red}`\n    )\n\n    t.end()\n  })\n})\n"]}